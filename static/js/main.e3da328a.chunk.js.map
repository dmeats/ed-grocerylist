{"version":3,"sources":["component/List.jsx","component/NumberofItems.jsx","App.js","serviceWorker.js","index.js"],"names":["List","props","cat","aPPLContext","useContext","APPLContext","itemsobj","useRef","RefLiBreadcntr","Breadcntr","RefLiMeatcntr","Meatcntr","RefLiCheesecntr","Cheesecntr","RefLiFresVegcntr","FresVegcntr","RefLiFresFruitcntr","FresFruitcntr","RefLiMedicinescntr","Medicinescntr","RefLiDairycntr","Dairycntr","RefLiCleaningcntr","Cleaningcntr","RefLiPastacntr","Pastacntr","RefLiSaucescntr","Saucescntr","RefLiRicecntr","Ricecntr","RefLiSoupcntr","Soupcntr","RefLiBakingcntr","Bakingcntr","RefLiSpicecntr","Spicecntr","RefLiBreakfastcntr","Breakfastcntr","RefLiCondimentscntr","Condimentscntr","RefLiSandwichcntr","Sandwichcntr","RefLiSnackscntr","Snackscntr","RefLiBeveragecntr","Beveragecntr","RefLiFreezerSectioncntr","FreezerSectioncntr","itemname","itemqty","i","insidecntr","data","length","Catorgory","YesNo","FoodItem","qty","items","push","id","namee","itmeqtyy","isCompleted","stylee","useState","todos","setTodos","Todo","todo","index","completeTodo","ListGroup","Item","key","variant","onClick","className","style","textDecoration","Badge","newTodos","current","toString","CHBreadcntr","CHMeatcntr","CHCheesecntr","CHFresVegcntr","CHFresFruitcntr","CHMedicinescntr","CHDairycntr","CHCleaningcntr","CHPastacntr","CHSaucescntr","CHRicecntr","CHSoupcntr","CHBakingcntr","CHSpicecntr","CHBreakfastcntr","CHCondimentscntr","CHSandwichcntr","CHSnackscntr","CHBeveragecntr","CHFreezerSectioncntr","console","log","map","e","NumberofItems","Refitems","RefCat","useEffect","loadcntrs","React","createContext","Dairyscntr","CHDairyscntr","App","grocerylist","setBreadcntr","setMeatcntr","setCheesecntr","setFresVegcntr","setFresFruitcntr","setMedicinescntr","setDairycntr","setCleaningcntr","setPastacntr","setSaucescntr","setRicecntr","setSoupcntr","setBakingcntr","setSpicecntr","setBreakfastcntr","setCondimentscntr","setSandwichcntr","setSnackscntr","setBeveragecntr","setFreezerSectioncntr","Provider","value","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e3da328a.chunk.js","sourcesContent":["\r\nimport React, {useContext,useRef,useState,useEffect} from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport {APPLContext} from './../App'\r\nimport './List2.css'\r\n\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nconst List = (props) => {\r\n    const {cat} = props\r\n    const aPPLContext = useContext(APPLContext)\r\n    const isdone = useRef('not-done')\r\n    const itemsobj = [];\r\n    const RefLiBreadcntr = useRef(aPPLContext.Breadcntr)\r\n    const RefLiMeatcntr = useRef(aPPLContext.Meatcntr)\r\n    const RefLiCheesecntr = useRef(aPPLContext.Cheesecntr)\r\n    const RefLiFresVegcntr = useRef(aPPLContext.FresVegcntr)\r\n    const RefLiFresFruitcntr = useRef(aPPLContext.FresFruitcntr)\r\n    const RefLiMedicinescntr = useRef(aPPLContext.Medicinescntr)\r\n    const RefLiDairycntr = useRef(aPPLContext.Dairycntr)\r\n    const RefLiCleaningcntr = useRef(aPPLContext.Cleaningcntr)\r\n    const RefLiPastacntr = useRef(aPPLContext.Pastacntr)\r\n    const RefLiSaucescntr = useRef(aPPLContext.Saucescntr)\r\n    const RefLiRicecntr = useRef(aPPLContext.Ricecntr)\r\n    const RefLiSoupcntr = useRef(aPPLContext.Soupcntr)\r\n    const RefLiBakingcntr = useRef(aPPLContext.Bakingcntr)\r\n    const RefLiSpicecntr = useRef(aPPLContext.Spicecntr)\r\n    const RefLiBreakfastcntr = useRef(aPPLContext.Breakfastcntr)\r\n    const RefLiCondimentscntr = useRef(aPPLContext.Condimentscntr)\r\n    const RefLiSandwichcntr = useRef(aPPLContext.Sandwichcntr)\r\n    const RefLiSnackscntr = useRef(aPPLContext.Snackscntr)\r\n    const RefLiBeveragecntr = useRef(aPPLContext.Beveragecntr)\r\n    const RefLiFreezerSectioncntr = useRef(aPPLContext.FreezerSectioncntr)\r\n    \r\n\r\n    let itemname = []\r\n    let itemqty = []\r\n   \r\n    let i = 1\r\n    let insidecntr = 1\r\n      \r\n    for (i = 1; i < aPPLContext.data.length; i++) {\r\n        //console.log(aPPLContext.data[i].Catorgory)\r\n        if(aPPLContext.data[i].Catorgory===cat && aPPLContext.data[i].YesNo==='1'){\r\n            \r\n            //console.log(aPPLContext.data[i].FoodItem)\r\n            itemname[insidecntr] = aPPLContext.data[i].FoodItem ;\r\n            //console.log(itemname[insidecntr])\r\n            itemqty[insidecntr] = aPPLContext.data[i].qty ;\r\n           // console.log(itemqty[insidecntr])\r\n            insidecntr = insidecntr + 1\r\n        }\r\n        \r\n      } \r\n    let items = insidecntr\r\n    \r\n    //builds new json object for food items and qtys\r\n   \r\n\r\n    for (let i = 0; i < items; i++) {\r\n        itemsobj.push({\r\n            id:i,\r\n            namee: itemname[i],\r\n            itmeqtyy: itemqty[i],\r\n            isCompleted: false,\r\n            stylee: 'not-done'\r\n        });\r\n        \r\n    }\r\n    //deletes 0 index which is first row in object which has 'undefined'\r\n    delete itemsobj[0];\r\n    const [todos, setTodos] = useState(itemsobj)\r\n   \r\n   //console.log(itemsobj)\r\n\r\n    //console.log(items)\r\n    function Todo({ todo, index, completeTodo}) {\r\n        return (\r\n            <ListGroup.Item\r\n            \r\n            key={index} \r\n            variant=\"success\"\r\n            onClick = {() => completeTodo(index)} \r\n           \r\n            className=\"todo\"\r\n            style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}>\r\n              <h3 className={todo.stylee}>\r\n                      {todo.namee} qty: <Badge variant=\"success\">{todo.itmeqtyy}</Badge>\r\n                     \r\n                  </h3>\r\n           \r\n            \r\n            </ListGroup.Item>\r\n        );\r\n      }\r\n\r\n    const completeTodo = index => {\r\n        const newTodos = [...todos]\r\n       // console.log(index)\r\n        newTodos[index].isCompleted = !newTodos[index].isCompleted\r\n        newTodos[index].stylee = newTodos[index].isCompleted ? \"done\" : \"not-done\" \r\n       // console.log(newTodos[index].isCompleted)\r\n        //console.log(newTodos)\r\n        //deletes 0 index which is first row in object which has 'undefined\r\n        delete newTodos[0]\r\n        setTodos(newTodos);\r\n        \r\n        if (cat === 'Bread'){\r\n              if (newTodos[index].isCompleted === true){\r\n                RefLiBreadcntr.current = RefLiBreadcntr.current - 1\r\n                let Breadcntr = RefLiBreadcntr.current.toString()\r\n                aPPLContext.CHBreadcntr(Breadcntr)\r\n              }\r\n              if (newTodos[index].isCompleted === false ){\r\n                RefLiBreadcntr.current = RefLiBreadcntr.current + 1\r\n                let Breadcntr = RefLiBreadcntr.current.toString()\r\n                aPPLContext.CHBreadcntr(Breadcntr)\r\n              }\r\n        }\r\n        if (cat === 'Meat'){\r\n          if (newTodos[index].isCompleted === true){\r\n            RefLiMeatcntr.current = RefLiMeatcntr.current - 1\r\n            let Meatcntr = RefLiMeatcntr.current.toString()\r\n            aPPLContext.CHMeatcntr(Meatcntr)\r\n          }\r\n          if (newTodos[index].isCompleted === false ){\r\n            RefLiMeatcntr.current = RefLiMeatcntr.current + 1\r\n            let Meatcntr = RefLiMeatcntr.current.toString()\r\n            aPPLContext.CHMeatcntr(Meatcntr)\r\n          }\r\n    }\r\n          if (cat === 'Cheese'){\r\n            if (newTodos[index].isCompleted === true){\r\n              RefLiCheesecntr.current = RefLiCheesecntr.current - 1\r\n              let Cheesecntr = RefLiCheesecntr.current.toString()\r\n              aPPLContext.CHCheesecntr(Cheesecntr)\r\n            }\r\n            if (newTodos[index].isCompleted === false ){\r\n              RefLiCheesecntr.current = RefLiCheesecntr.current + 1\r\n              let Cheesecntr = RefLiCheesecntr.current.toString()\r\n              aPPLContext.CHCheesecntr(Cheesecntr)\r\n            }\r\n      }\r\n     \r\n  if (cat === 'Fresh Vegetable'){\r\n    if (newTodos[index].isCompleted === true){\r\n      RefLiFresVegcntr.current = RefLiFresVegcntr.current - 1\r\n      let FresVegcntr = RefLiFresVegcntr.current.toString()\r\n      aPPLContext.CHFresVegcntr(FresVegcntr)\r\n    }\r\n    if (newTodos[index].isCompleted === false ){\r\n      RefLiFresVegcntr.current = RefLiFresVegcntr.current + 1\r\n      let FresVegcntr = RefLiFresVegcntr.current.toString()\r\n      aPPLContext.CHFresVegcntr(FresVegcntr)\r\n    }\r\n}\r\nif (cat === 'Fresh Fruit'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiFresFruitcntr.current = RefLiFresFruitcntr.current - 1\r\n    let FresFruitcntr = RefLiFresFruitcntr.current.toString()\r\n    aPPLContext.CHFresFruitcntr(FresFruitcntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiFresFruitcntr.current = RefLiFresFruitcntr.current + 1\r\n    let FresFruitcntr = RefLiFresFruitcntr.current.toString()\r\n    aPPLContext.CHFresFruitcntr(FresFruitcntr)\r\n  }\r\n}\r\nif (cat === 'Medicines'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiMedicinescntr.current = RefLiMedicinescntr.current - 1\r\n    let Medicinescntr = RefLiMedicinescntr.current.toString()\r\n    aPPLContext.CHMedicinescntr(Medicinescntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiMedicinescntr.current = RefLiMedicinescntr.current + 1\r\n    let Medicinescntr = RefLiMedicinescntr.current.toString()\r\n    aPPLContext.CHMedicinescntr(Medicinescntr)\r\n  }\r\n}\r\nif (cat === 'Dairy'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiDairycntr.current = RefLiDairycntr.current - 1\r\n    let Dairycntr = RefLiDairycntr.current.toString()\r\n    aPPLContext.CHDairycntr(Dairycntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiDairycntr.current = RefLiDairycntr.current + 1\r\n    let Dairycntr = RefLiDairycntr.current.toString()\r\n    aPPLContext.CHDairycntr(Dairycntr)\r\n  }\r\n}\r\nif (cat === 'Cleaning'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiCleaningcntr.current = RefLiCleaningcntr.current - 1\r\n    let Cleaningcntr = RefLiCleaningcntr.current.toString()\r\n    aPPLContext.CHCleaningcntr(Cleaningcntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiCleaningcntr.current = RefLiCleaningcntr.current + 1\r\n    let Cleaningcntr = RefLiCleaningcntr.current.toString()\r\n    aPPLContext.CHCleaningcntr(Cleaningcntr)\r\n  }\r\n}\r\nif (cat === 'Pasta'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiPastacntr.current = RefLiPastacntr.current - 1\r\n    let Pastacntr = RefLiPastacntr.current.toString()\r\n    aPPLContext.CHPastacntr(Pastacntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiPastacntr.current = RefLiPastacntr.current + 1\r\n    let Pastacntr = RefLiPastacntr.current.toString()\r\n    aPPLContext.CHPastacntr(Pastacntr)\r\n  }\r\n}\r\nif (cat === 'Sauces'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiSaucescntr.current = RefLiSaucescntr.current - 1\r\n    let Saucescntr = RefLiSaucescntr.current.toString()\r\n    aPPLContext.CHSaucescntr(Saucescntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiSaucescntr.current = RefLiSaucescntr.current + 1\r\n    let Saucescntr = RefLiSaucescntr.current.toString()\r\n    aPPLContext.CHSaucescntr(Saucescntr)\r\n  }\r\n}\r\nif (cat === 'Rice'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiRicecntr.current = RefLiRicecntr.current - 1\r\n    let Ricecntr = RefLiRicecntr.current.toString()\r\n    aPPLContext.CHRicecntr(Ricecntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiRicecntr.current = RefLiRicecntr.current + 1\r\n    let Ricecntr = RefLiRicecntr.current.toString()\r\n    aPPLContext.CHRicecntr(Ricecntr)\r\n  }\r\n}\r\nif (cat === 'Soup'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiSoupcntr.current = RefLiSoupcntr.current - 1\r\n    let Soupcntr = RefLiSoupcntr.current.toString()\r\n    aPPLContext.CHSoupcntr(Soupcntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiSoupcntr.current = RefLiSoupcntr.current + 1\r\n    let Soupcntr = RefLiSoupcntr.current.toString()\r\n    aPPLContext.CHSoupcntr(Soupcntr)\r\n  }\r\n}\r\nif (cat === 'Baking'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiBakingcntr.current = RefLiBakingcntr.current - 1\r\n    let Bakingcntr = RefLiBakingcntr.current.toString()\r\n    aPPLContext.CHBakingcntr(Bakingcntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiBakingcntr.current = RefLiBakingcntr.current + 1\r\n    let Bakingcntr = RefLiBakingcntr.current.toString()\r\n    aPPLContext.CHBakingcntr(Bakingcntr)\r\n  }\r\n}\r\nif (cat === 'Spice'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiSpicecntr.current = RefLiSpicecntr.current - 1\r\n    let Spicecntr = RefLiSpicecntr.current.toString()\r\n    aPPLContext.CHSpicecntr(Spicecntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiSpicecntr.current = RefLiSpicecntr.current + 1\r\n    let Spicecntr = RefLiSpicecntr.current.toString()\r\n    aPPLContext.CHSpicecntr(Spicecntr)\r\n  }\r\n}\r\nif (cat === 'Breakfast'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiBreakfastcntr.current = RefLiBreakfastcntr.current - 1\r\n    let Breakfastcntr = RefLiBreakfastcntr.current.toString()\r\n    aPPLContext.CHBreakfastcntr(Breakfastcntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiBreakfastcntr.current = RefLiBreakfastcntr.current + 1\r\n    let Breakfastcntr = RefLiBreakfastcntr.current.toString()\r\n    aPPLContext.CHBreakfastcntr(Breakfastcntr)\r\n  }\r\n}\r\nif (cat === 'Condiments'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiCondimentscntr.current = RefLiCondimentscntr.current - 1\r\n    let Condimentscntr = RefLiCondimentscntr.current.toString()\r\n    aPPLContext.CHCondimentscntr(Condimentscntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiCondimentscntr.current = RefLiCondimentscntr.current + 1\r\n    let Condimentscntr = RefLiCondimentscntr.current.toString()\r\n    aPPLContext.CHCondimentscntr(Condimentscntr)\r\n  }\r\n}\r\nif (cat === 'Sandwich'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiSandwichcntr.current = RefLiSandwichcntr.current - 1\r\n    let Sandwichcntr = RefLiSandwichcntr.current.toString()\r\n    aPPLContext.CHSandwichcntr(Sandwichcntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiSandwichcntr.current = RefLiSandwichcntr.current + 1\r\n    let Sandwichcntr = RefLiSandwichcntr.current.toString()\r\n    aPPLContext.CHSandwichcntr(Sandwichcntr)\r\n  }\r\n}\r\nif (cat === 'Snacks'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiSnackscntr.current = RefLiSnackscntr.current - 1\r\n    let Snackscntr = RefLiSnackscntr.current.toString()\r\n    aPPLContext.CHSnackscntr(Snackscntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiSnackscntr.current = RefLiSnackscntr.current + 1\r\n    let Snackscntr = RefLiSnackscntr.current.toString()\r\n    aPPLContext.CHSnackscntr(Snackscntr)\r\n  }\r\n}\r\nif (cat === 'Beverage'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiBeveragecntr.current = RefLiBeveragecntr.current - 1\r\n    let Beveragecntr = RefLiBeveragecntr.current.toString()\r\n    aPPLContext.CHBeveragecntr(Beveragecntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiBeveragecntr.current = RefLiBeveragecntr.current + 1\r\n    let Beveragecntr = RefLiBeveragecntr.current.toString()\r\n    aPPLContext.CHBeveragecntr(Beveragecntr)\r\n  }\r\n}\r\nif (cat === 'Freezer Section'){\r\n  if (newTodos[index].isCompleted === true){\r\n    RefLiFreezerSectioncntr.current = RefLiFreezerSectioncntr.current - 1\r\n    let FreezerSectioncntr = RefLiFreezerSectioncntr.current.toString()\r\n    aPPLContext.CHFreezerSectioncntr(FreezerSectioncntr)\r\n  }\r\n  if (newTodos[index].isCompleted === false ){\r\n    RefLiFreezerSectioncntr.current = RefLiFreezerSectioncntr.current + 1\r\n    let FreezerSectioncntr = RefLiFreezerSectioncntr.current.toString()\r\n    aPPLContext.CHFreezerSectioncntr(FreezerSectioncntr)\r\n  }\r\n}\r\n\r\n       console.log(aPPLContext.Breadcntr)\r\n      };\r\n      \r\n    return(       \r\n            <ListGroup>\r\n            {todos.map((e, index) => (\r\n\r\n                                        <Todo\r\n                                        key={index}\r\n                                        index={index}\r\n                                        todo={e}\r\n                                        completeTodo={completeTodo}\r\n                                        />\r\n                  ))}\r\n            </ListGroup>\r\n    )\r\n}\r\nexport default List;","import React, {useContext,useEffect,useRef,useState} from 'react'\r\nimport {APPLContext} from '../App'\r\n\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nconst NumberofItems = (props) => {\r\n    const {cat} = props\r\n    const aPPLContext = useContext(APPLContext)\r\n    const Refitems = useRef(0);\r\n    \r\n    const RefCat = useRef(cat)\r\n   \r\n    \r\n   \r\n    //let itemqty = []\r\n   \r\n    let i = 1\r\n    let insidecntr = 1\r\n   \r\n    for (i = 1; i < aPPLContext.data.length; i++) {\r\n        if(aPPLContext.data[i].Catorgory===RefCat.current && aPPLContext.data[i].YesNo==='1'){\r\n          insidecntr = insidecntr + 1\r\n        }\r\n    } \r\n\r\n    let items = insidecntr\r\n    items = items-1\r\n    Refitems.current  = items\r\n    console.log(Refitems.current)\r\n    \r\n   \r\n    const loadcntrs = () =>{\r\n    if(RefCat.current === 'Bread'){\r\n        let Breadcntr = ''\r\n        aPPLContext.CHBreadcntr(Breadcntr)\r\n        }\r\n    if(RefCat.current === 'Meat'){\r\n        let Meatcntr = ''\r\n        aPPLContext.CHMeatcntr(Meatcntr)\r\n        }\r\n    if(RefCat.current === 'Cheese'){\r\n         let Cheesecntr = ''\r\n         aPPLContext.CHCheesecntr(Cheesecntr)\r\n         }\r\n    if(RefCat.current === 'Fresh Vegetable'){\r\n         let FresVegcntr = ''\r\n         aPPLContext.CHFresVegcntr(FresVegcntr)\r\n         }\r\n    if(RefCat.current === 'Fresh Vegetable'){\r\n         let FresFruitcntr = ''\r\n         aPPLContext.CHFresFruitcntr(FresFruitcntr)\r\n        }    \r\n    if(RefCat.current === 'Medicines'){\r\n        let Medicinescntr = ''\r\n        aPPLContext.CHMedicinescntr(Medicinescntr)\r\n        }\r\n    if(RefCat.current === 'Dairy'){\r\n        let Dairycntr = ''\r\n        aPPLContext.CHDairycntr(Dairycntr)\r\n        }\r\n    if(RefCat.current === 'Cleaning'){\r\n        let Cleaningcntr = ''\r\n        aPPLContext.CHCleaningcntr(Cleaningcntr)\r\n        } \r\n    if(RefCat.current === 'Pasta'){\r\n        let Pastacntr = ''\r\n        aPPLContext.CHPastacntr(Pastacntr)\r\n        }\r\n        if(RefCat.current === 'Sauces'){\r\n            let Saucescntr = ''\r\n            aPPLContext.CHSaucescntr(Saucescntr)\r\n            }   \r\n        if(RefCat.current === 'Rice'){\r\n            let Ricecntr = ''\r\n            aPPLContext.CHRicecntr(Ricecntr)\r\n            } \r\n        if(RefCat.current === 'Soup'){\r\n            let Soupcntr = ''\r\n            aPPLContext.CHSoupcntr(Soupcntr)\r\n            } \r\n        if(RefCat.current === 'Baking'){\r\n            let Bakingcntr = ''\r\n            aPPLContext.CHBakingcntr(Bakingcntr)\r\n            }  \r\n        if(RefCat.current === 'Spice'){\r\n            let Spicecntr = ''\r\n            aPPLContext.CHSpicecntr(Spicecntr)\r\n            } \r\n        if(RefCat.current === 'Breakfast'){\r\n            let Breakfastcntr = ''\r\n            aPPLContext.CHBreakfastcntr(Breakfastcntr)\r\n            }  \r\n        if(RefCat.current === 'Condiments'){\r\n            let Condimentscntr = ''\r\n            aPPLContext.CHCondimentscntr(Condimentscntr)\r\n            }     \r\n        if(RefCat.current === 'Sandwich'){\r\n            let Sandwichcntr = ''\r\n            aPPLContext.CHSandwichcntr(Sandwichcntr)\r\n            }  \r\n        if(RefCat.current === 'Snacks'){\r\n            let Snackscntr = ''\r\n            aPPLContext.CHSnackscntr(Snackscntr)\r\n            }\r\n        if(RefCat.current === 'Beverage'){\r\n            let Beveragecntr = ''\r\n            aPPLContext.CHBeveragecntr(Beveragecntr)\r\n            } \r\n        if(RefCat.current === 'Freezer Section'){\r\n            let FreezerSectioncntr = ''\r\n            aPPLContext.CHFreezerSectioncntr(FreezerSectioncntr)\r\n            }      \r\n}\r\n\r\nuseEffect(() => {\r\n    loadcntrs();\r\n  }, []);\r\n        \r\n  if(RefCat.current === 'Bread' ){\r\n        return(\r\n            <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n             <Badge variant=\"info\">{aPPLContext.Breadcntr}</Badge>\r\n            </h2>\r\n     )\r\n        }\r\n        if(RefCat.current === 'Meat'){\r\n            return(\r\n                <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                 <Badge variant=\"info\">{aPPLContext.Meatcntr}</Badge>\r\n                </h2>\r\n         )\r\n            } \r\n        if(RefCat.current === 'Cheese'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Cheesecntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Fresh Vegetable'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.FresVegcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Fresh Fruit'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.FresFruitcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Medicines'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Medicinescntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Dairy'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Dairycntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Cleaning'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Cleaningcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Pasta'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Pastacntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Sauces'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Saucescntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Rice'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Ricecntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Soup'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Soupcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Baking'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Bakingcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Spice'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Spicecntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Breakfast'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Breakfastcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Condiments'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Condimentscntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Sandwich'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Sandwichcntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Snacks'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Snackscntr}</Badge>\r\n                    </h2>\r\n             )}\r\n             if(RefCat.current === 'Beverage'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.Beveragecntr}</Badge>\r\n                    </h2>\r\n             )}if(RefCat.current === 'Freezer Section'){\r\n                return(\r\n                    <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n                     <Badge variant=\"info\">{aPPLContext.FreezerSectioncntr}</Badge>\r\n                    </h2>\r\n             )}\r\n\r\n             else {\r\n         return(\r\n            <h2>{cat} items: <Badge variant=\"warning\">{Refitems.current}</Badge>\r\n             \r\n            </h2>\r\n           )}\r\n                \r\n             \r\n           \r\n        \r\n\r\n}\r\nexport default NumberofItems;","import React, {useState} from 'react';\nimport List from './component/List';\nimport NumberofItems from './component/NumberofItems'\nimport grocerylist from './DataFile/data.json'\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\n\n\nimport './App.css';\nexport const APPLContext = React.createContext({\n  //Message: ' Thank you for visiting my steampunk inspired website',\n  Breadcntr: '0',\n  CHBreadcntr: () => {},\n  Meatcntr: '0',\n  CHMeatcntr: () => {},\n  Cheesecntr: '0',\n  CHCheesecntr: () => {},\n  FresVegcntr: '0',\n  CHFresVegcntr: () => {},\n  FresFruitcntr: '0',\n  CHFresFruitcntr: () => {},\n  Medicinescntr: '0',\n  CHMedicinescntr: () => {},\n  Dairyscntr: '0',\n  CHDairyscntr: () => {},\n  Cleaningcntr: '0',\n  CHCleaningcntr: () => {},\n  Pastacntr: '0',\n  CHPastacntr: () => {},\n  Saucescntr: '0',\n  CHSaucescntr: () => {},\n  Ricecntr: '0',\n  CHRicecntr: () => {},\n  Soupcntr: '0',\n  CHSoupcntr: () => {},\n  Bakingcntr: '0',\n  CHBakingcntr: () => {},\n  Spicecntr: '0',\n  CHSpicecntr: () => {},\n  Breakfastcntr: '0',\n  CHBreakfastcntr: () => {},\n  Condimentscntr: '0',\n  CHCondimentscntr: () => {},\n  Sandwichcntr: '0',\n  CHSandwichcntr: () => {},\n  Snackscntr: '0',\n  CHSnackscntr: () => {},\n  Beveragecntr: '0',\n  CHBeveragecntr: () => {},\n  FreezerSectioncntr: '0',\n  CHFreezerSectioncntr: () => {},\n  //ChangeMessage: () => {},\n  //  ContactSlideStatus: () => {},\n});\n\n\nfunction App() {\n \n  //const [Message, setMessage] = useState(' Thank you for visiting my steampunk inspired website which is under constant construction')\n  const [data, setdata] = useState(grocerylist)\n  const [Breadcntr, setBreadcntr] = useState('0')\n  const [Meatcntr, setMeatcntr] = useState('0')\n  const [Cheesecntr, setCheesecntr] = useState('0')\n  const [FresVegcntr, setFresVegcntr] = useState('0')\n  const [FresFruitcntr, setFresFruitcntr] = useState('0')\n  const [Medicinescntr, setMedicinescntr] = useState('0')\n  const [Dairycntr, setDairycntr] = useState('0')\n  const [Cleaningcntr, setCleaningcntr] = useState('0')\n  const [Pastacntr, setPastacntr] = useState('0')\n  const [Saucescntr, setSaucescntr] = useState('0')\n  const [Ricecntr, setRicecntr] = useState('0')\n  const [Soupcntr, setSoupcntr] = useState('0')\n  const [Bakingcntr, setBakingcntr] = useState('0')\n  const [Spicecntr, setSpicecntr] = useState('0')\n  const [Breakfastcntr, setBreakfastcntr] = useState('0')\n  const [Condimentscntr, setCondimentscntr] = useState('0')\n  const [Sandwichcntr, setSandwichcntr] = useState('0')\n  const [Snackscntr, setSnackscntr] = useState('0')\n  const [Beveragecntr, setBeveragecntr] = useState('0')\n  const [FreezerSectioncntr, setFreezerSectioncntr] = useState('0')\n  \n  return (\n\n    <APPLContext.Provider value = {{data,\n    Breadcntr,\n    setBreadcntr,\n    CHBreadcntr: Breadcntr => setBreadcntr(Breadcntr),\n    Meatcntr,\n    setMeatcntr,\n    CHMeatcntr: Meatcntr => setMeatcntr(Meatcntr),\n    Cheesecntr,\n    setCheesecntr,\n    CHCheesecntr: Cheesecntr => setCheesecntr(Cheesecntr),\n    FresVegcntr,\n    setFresVegcntr,\n    CHFresVegcntr: FresVegcntr => setFresVegcntr(FresVegcntr),\n    FresFruitcntr,\n    setFresFruitcntr,\n    CHFresFruitcntr: FresFruitcntr => setFresFruitcntr(FresFruitcntr),\n    Medicinescntr,\n    setMedicinescntr,\n    CHMedicinescntr: Medicinescntr => setMedicinescntr(Medicinescntr),\n    Dairycntr,\n    setDairycntr,\n    CHDairycntr: Dairycntr => setDairycntr(Dairycntr),\n    Cleaningcntr,\n    setCleaningcntr,\n    CHCleaningcntr: Cleaningcntr => setCleaningcntr(Cleaningcntr),\n    Pastacntr,\n    setPastacntr,\n    CHPastacntr: Pastacntr => setPastacntr(Pastacntr),\n    Saucescntr,\n    setSaucescntr,\n    CHSaucescntr: Saucescntr => setSaucescntr(Saucescntr),\n    Ricecntr,\n    setRicecntr,\n    CHRicecntr: Ricecntr => setRicecntr(Ricecntr),\n    Soupcntr,\n    setSoupcntr,\n    CHSoupcntr: Soupcntr => setSoupcntr(Soupcntr),\n    Bakingcntr,\n    setBakingcntr,\n    CHBakingcntr: Bakingcntr => setBakingcntr(Bakingcntr),\n    Spicecntr,\n    setSpicecntr,\n    CHSpicecntr: Spicecntr => setSpicecntr(Spicecntr),\n    Breakfastcntr,\n    setBreakfastcntr,\n    CHBreakfastcntr: Breakfastcntr => setBreakfastcntr(Breakfastcntr),\n    Condimentscntr,\n    setCondimentscntr,\n    CHCondimentscntr: Condimentscntr => setCondimentscntr(Condimentscntr),\n    Sandwichcntr,\n    setSandwichcntr,\n    CHSandwichcntr: Sandwichcntr => setSandwichcntr(Sandwichcntr),\n    Snackscntr,\n    setSnackscntr,\n    CHSnackscntr: Snackscntr => setSnackscntr(Snackscntr),\n    Beveragecntr,\n    setBeveragecntr,\n    CHBeveragecntr: Beveragecntr => setBeveragecntr(Beveragecntr),\n    FreezerSectioncntr,\n    setFreezerSectioncntr,\n    CHFreezerSectioncntr: FreezerSectioncntr => setFreezerSectioncntr(FreezerSectioncntr),\n    }}>\n      \n      <div className=\"App\">\n        \n        <h1> &nbsp; E & D Grocery list</h1>\n        \n        <Accordion >\n        \n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\" className='CardHeader'>\n\n              <NumberofItems cat='Bread'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Bread'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n         \n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"1\" className='CardHeader'>\n\n              <NumberofItems cat='Meat'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Meat'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"2\" className='CardHeader'>\n              <NumberofItems cat='Cheese'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Cheese'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"3\" className='CardHeader'>\n              <NumberofItems cat='Fresh Vegetable'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"3\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Fresh Vegetable'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"4\" className='CardHeader'>\n              <NumberofItems cat='Fresh Fruit'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"4\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Fresh Fruit'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"5\" className='CardHeader'>\n              <NumberofItems cat='Medicines'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"5\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Medicines'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"6\" className='CardHeader'>\n              <NumberofItems cat='Dairy'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"6\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Dairy'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"7\" className='CardHeader'>\n              <NumberofItems cat='Cleaning'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"7\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Cleaning'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"8\" className='CardHeader'>\n              <NumberofItems cat='Pasta'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"8\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Pasta'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"9\" className='CardHeader'>\n              <NumberofItems cat='Sauces'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"9\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Sauces'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"10\" className='CardHeader'>\n              <NumberofItems cat='Rice'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"10\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Rice'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"11\" className='CardHeader'>\n              <NumberofItems cat='Soup'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"11\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Soup'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"12\" className='CardHeader'>\n              <NumberofItems cat='Baking'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"12\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Baking'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"13\" className='CardHeader'>\n              <NumberofItems cat='Spice'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"13\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Spice'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"14\" className='CardHeader'>\n              <NumberofItems cat='Breakfast'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"14\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Breakfast'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"15\" className='CardHeader'>\n              <NumberofItems cat='Condiments'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"15\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Condiments'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"16\" className='CardHeader'>\n              <NumberofItems cat='Sandwich'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"16\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Sandwich'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"17\" className='CardHeader'>\n              <NumberofItems cat='Snacks'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"17\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Snacks'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"18\" className='CardHeader'>\n              <NumberofItems cat='Beverage'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"18\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Beverage'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"19\" className='CardHeader'>\n              <NumberofItems cat='Freezer Section'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"19\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Freezer Section'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n        </Accordion>\n        <h1> &nbsp; Thankyou !!!</h1>\n\n      </div>\n    </APPLContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}