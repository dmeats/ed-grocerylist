{"version":3,"sources":["component/List.jsx","component/NumberofItems.jsx","App.js","serviceWorker.js","index.js"],"names":["List","props","cat","aPPLContext","useContext","APPLContext","itemname","itemqty","i","insidecntr","data","length","Catorgory","YesNo","FoodItem","console","log","qty","items","itemsobj","push","namee","itmeqtyy","ListGroup","map","e","index","Item","variant","Badge","NumberofItems","React","createContext","App","useState","grocerylist","Provider","value","className","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d41270ff.chunk.js","sourcesContent":["\r\nimport React, {useContext} from 'react'\r\nimport {APPLContext} from './../App'\r\n\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nconst List = (props) => {\r\n    const {cat} = props\r\n    const aPPLContext = useContext(APPLContext)\r\n    \r\n    let itemname = []\r\n    let itemqty = []\r\n   \r\n    let i = 1\r\n    let insidecntr = 1\r\n   \r\n    \r\n    \r\n    \r\n    for (i = 1; i < aPPLContext.data.length; i++) {\r\n        //console.log(aPPLContext.data[i].Catorgory)\r\n        if(aPPLContext.data[i].Catorgory===cat && aPPLContext.data[i].YesNo==='1'){\r\n            \r\n            //console.log(aPPLContext.data[i].FoodItem)\r\n            itemname[insidecntr] = aPPLContext.data[i].FoodItem ;\r\n            console.log(itemname[insidecntr])\r\n            itemqty[insidecntr] = aPPLContext.data[i].qty ;\r\n            console.log(itemqty[insidecntr])\r\n            insidecntr = insidecntr + 1\r\n        }\r\n        \r\n      } \r\n    let items = insidecntr\r\n    \r\n    //builds new json object for food items and qtys\r\n    const itemsobj = [];\r\n\r\n    for (let i = 1; i < items; i++) {\r\n        itemsobj.push({\r\n            namee: itemname[i],\r\n            itmeqtyy: itemqty[i]\r\n        });\r\n    }\r\n\r\n    \r\n   \r\n   console.log(itemsobj)\r\n\r\n    console.log(items)\r\n \r\n    \r\n    return(\r\n        \r\n        \r\n            <ListGroup>\r\n            {itemsobj.map((e, index) => (\r\n                    \r\n                  <ListGroup.Item variant=\"success\"><h3>{e.namee} qty: <Badge variant=\"success\">{e.itmeqtyy}</Badge></h3></ListGroup.Item>\r\n                  \r\n                  ))}\r\n            </ListGroup>\r\n     \r\n      \r\n        \r\n    )\r\n}\r\nexport default List;","import React, {useContext} from 'react'\r\nimport {APPLContext} from '../App'\r\n\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nconst NumberofItems = (props) => {\r\n    const {cat} = props\r\n    const aPPLContext = useContext(APPLContext)\r\n    \r\n    \r\n    let itemqty = []\r\n   \r\n    let i = 1\r\n    let insidecntr = 1\r\n   \r\n    \r\n    \r\n    \r\n    for (i = 1; i < aPPLContext.data.length; i++) {\r\n        //console.log(aPPLContext.data[i].Catorgory)\r\n        if(aPPLContext.data[i].Catorgory===cat && aPPLContext.data[i].YesNo==='1'){\r\n            \r\n            //console.log(aPPLContext.data[i].FoodItem)\r\n            \r\n            \r\n            \r\n            insidecntr = insidecntr + 1\r\n        }\r\n        \r\n      } \r\n    let items = insidecntr\r\n    \r\n   \r\n    \r\n   \r\n   \r\n\r\n    console.log(items)\r\n \r\n    \r\n    return(\r\n        \r\n        \r\n           <h2>{cat} items: <Badge variant=\"warning\">{items-1}</Badge></h2>\r\n     \r\n      \r\n        \r\n    )\r\n}\r\nexport default NumberofItems;","import React, {useState} from 'react';\nimport List from './component/List';\nimport NumberofItems from './component/NumberofItems'\nimport grocerylist from './DataFile/data.json'\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\n\n\nimport './App.css';\nexport const APPLContext = React.createContext()\n\nfunction App() {\n\n  const [data, setdata] = useState(grocerylist)\n \n  return (\n\n    <APPLContext.Provider value = {{data}}>\n      <div className=\"App\">\n        \n        <h1> &nbsp; E & D Grocery list</h1>\n        \n        <Accordion >\n        <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\" className='CardHeader'>\n\n              <NumberofItems cat='Bread'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Bread'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"1\" className='CardHeader'>\n\n              <NumberofItems cat='Meat'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Meat'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"2\" className='CardHeader'>\n              <NumberofItems cat='Cheese'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Cheese'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"3\" className='CardHeader'>\n              <NumberofItems cat='Fresh Vegetable'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"3\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Fresh Vegetable'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"4\" className='CardHeader'>\n              <NumberofItems cat='Fresh Fruit'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"4\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Fresh Fruit'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"5\" className='CardHeader'>\n              <NumberofItems cat='Medicines'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"5\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Medicines'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"6\" className='CardHeader'>\n              <NumberofItems cat='Dairy'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"6\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Dairy'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"7\" className='CardHeader'>\n              <NumberofItems cat='Cleaning'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"7\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Cleaning'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"8\" className='CardHeader'>\n              <NumberofItems cat='Pasta'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"8\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Pasta'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"9\" className='CardHeader'>\n              <NumberofItems cat='Sauces'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"9\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Sauces'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"10\" className='CardHeader'>\n              <NumberofItems cat='Rice'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"10\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Rice'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"11\" className='CardHeader'>\n              <NumberofItems cat='Soup'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"11\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Soup'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"12\" className='CardHeader'>\n              <NumberofItems cat='Baking'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"12\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Baking'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"13\" className='CardHeader'>\n              <NumberofItems cat='Spice'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"13\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Spice'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"14\" className='CardHeader'>\n              <NumberofItems cat='Breakfast'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"14\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Breakfast'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"15\" className='CardHeader'>\n              <NumberofItems cat='Condiments'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"15\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Condiments'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"16\" className='CardHeader'>\n              <NumberofItems cat='Sandwich items'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"16\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Sandwich items'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"17\" className='CardHeader'>\n              <NumberofItems cat='Snacks'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"17\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Snacks'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"18\" className='CardHeader'>\n              <NumberofItems cat='Beverage'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"18\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Beverage'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"19\" className='CardHeader'>\n              <NumberofItems cat='Freezer Section'/>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"19\">\n                <Card.Body>\n                  <ListGroup>\n                      <List cat='Freezer Section'/>\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n        </Accordion>\n\n\n      </div>\n    </APPLContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}